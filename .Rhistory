ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity",width=0.2,position="dodge")
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity",width=0.9,position="dodge")
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity",width=0.2,position=position_dodge(0.7))
library(gcookbook) # 为了使用数据
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity")
cabbage_exp
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
guides(fill=guide_legend(reverse=TRUE))
library(plyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar))) +
geom_bar(stat="identity")
library(plyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar))) +
geom_bar(stat="identity")
install.packages('plyr')
install.packages("plyr")
knitr::opts_chunk$set(prompt=TRUE,comment='',echo=TRUE,collapse=TRUE,message=FALSE,warning=FALSE)
library(plyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar))) +
geom_bar(stat="identity")
library(plyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar))) +
geom_bar(stat="identity")
library(ggplot2)
library(plyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar))) +
geom_bar(stat="identity")
library(ggplot2)
library(gcookbook)
library(plyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar))) +
geom_bar(stat="identity")
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity",colour="black") +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette="Pastel1")
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity",colour="black") +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette="set1")
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity",colour="black") +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette="Set1")
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity",colour="black") +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette="Pastel1")
library(gcookbook) # 为了使用数据
library(plyr)
# 以Date为切割变量()对每组数据进行transform()
ce <- ddply(cabbage_exp,"Date",transform,
percent_weight=Weight/sum(Weight)*100)
ggplot(ce,aes(x=Date,y=percent_weight,fill=Cultivar)) +
geom_bar(stat="identity")
cabbage_exp
ce <- ddply(cabbage_exp,"Date",transform,
percent_weight=Weight/sum(Weight)*100)
ce <- ddply(cabbage_exp,"Date",transform,
percent_weight=Weight/sum(Weight)*100)
ce
ggplot(ce, aes(x=Date, y=percent_weight, fill=Cultivar)) +
geom_bar(stat='identity', colour='black') +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette='Pastel1')
library(gcookbook) # 为了使用数据
#在条形图顶端下方
ggplot(cabbage_exp,aes(x=interaction(Date,Cultivar),y=Weight)) +
geom_bar(stat="identity") +
geom_text(aes(label=Weight),vjust=1.5,colour="white")
# 在条形图顶端上方
ggplot(cabbage_exp,aes(x=interaction(Date,Cultivar),y=Weight)) +
geom_bar(stat="identity") +
geom_text(aes(label=Weight),vjust=-0.2)
#将y轴上限变大
ggplot(cabbage_exp,aes(x=interaction(Date,Cultivar),y=Weight)) +
geom_bar(stat="identity") +
geom_text(aes(label="Weight"),vjust=-0.2) +
ylim(0,max(cabbage_expsWeight)*1.05)
#将y轴上限变大
ggplot(cabbage_exp,aes(x=interaction(Date,Cultivar),y=Weight)) +
geom_bar(stat="identity") +
geom_text(aes(label="Weight"),vjust=-0.2) +
ylim(0,max(cabbage_exp$Weight)*1.05)
#设定标签的y轴位置使其略高于条形图顶端----y轴范围会自动调整
ggplot(cabbage_exp,aes(x=interaction(Date,Cultivar),y=Weight)) +
geom_bar(stat="identity") +
geom_text(aes(y=Weight+0.1,label=Weight))
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity",position="dodge") +
geom_text(aes(label=Weight),vjust=1.5,colour="white",
position=position_dodge(.9),size=3)
library(plyr)
# 根据日期和性别对数据进行排序
ce <-arrange(cabbage_exp,Date,Cultivar)
# 计算累积和
ce <- ddply(ce,"Date",transform,label_y=cumsum(Weight))
ce
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
library(plyr)
# 根据日期和性别对数据进行排序
ce <-arrange(cabbage_exp,Date,Cultivar)
# 计算累积和
ce <- ddply(ce,"Date",transform,label_y=cumsum(Weight))
ce
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
library(plyr)
# 根据日期和性别对数据进行排序
ce <-arrange(cabbage_exp,Date,Cultivar)
# 计算累积和
ce <- ddply(ce,"Date",transform,label_y=cumsum(Weight))
ce
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
library(plyr)
# 根据日期和性别对数据进行排序
ce <-arrange(cabbage_exp,Date)
# 计算累积和
ce <- ddply(ce,"Date",transform,label_y=cumsum(Weight))
ce
library(plyr)
# 根据日期和性别对数据进行排序
ce <-arrange(cabbage_exp,Date)
# 计算累积和
ce <- ddply(ce,"Date",transform,label_y=cumsum(Weight))
ce
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
library(plyr)
# 根据日期和性别对数据进行排序
ce <-arrange(cabbage_exp,Date,Cultivar)
# 计算累积和
ce <- ddply(ce,"Date",transform,label_y=cumsum(Weight))
ce
library(plyr)
# 根据日期和性别对数据进行排序
ce <- arrange(cabbage_exp,Date,Cultivar)
# 计算累积和
ce <- ddply(ce,"Date",transform,label_y=cumsum(Weight))
ce
?arrange
?ddply
ggplot(ce,aes(x=Date,y=label_y,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=label_y)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=Weight,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=ce)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=label_y)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=label_y,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=label_y),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=Weight,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(label=Weight,y=label_y),vjust=1.5,colour="white")
ggplot(ce,aes(x=reorder(Date,Weight),y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=reorder(Date,Weight),fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=label_y)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=label_y)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white") +
scale_fill_manual(Cultivar)
ggplot(ce,aes(x=Date,y=Weight,fill=label_y)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=label_y)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white") +
guides(fill=Cultivar)
ggplot(ce,aes(x=Date,y=Weight,fill=label_y)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white") +
guides(fill=guide_legend('Cultivar'))
ggplot(ce,aes(x=Date,y=Weight,fill=label_y)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white") +
guides(fill=guide_legend(Cultivar))
?guides
ggplot(ce,aes(x=Date,y=Weight,fill=label_y)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white") +
guides(fill=guide_legend(title ='Cultivar'))
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar))) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
library(plyr)#为了使用desc()函数
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar))) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
library(plyr) # 为了使用desc()函数
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar))) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
library(plyr) # 为了使用desc()函数
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar))) +
geom_bar(stat="identity") +
geom_text(aes(y=Weight,label=Weight),vjust=1.5,colour="white")
library(plyr) # 为了使用desc()函数
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar))) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
library(plyr) # 为了使用desc()函数
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,order=desc(label_y),label=Weight),vjust=1.5,colour="white")
library(plyr) # 为了使用desc()函数
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
library(plyr) # 为了使用desc()函数
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(x=Date,y=label_y,label=Weight),vjust=1.5,colour="white")
library(plyr) # 为了使用desc()函数
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(ce,aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=-1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
?aes
library(ggplot2)
library(gcookbook)
library(plyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar))) +
geom_bar(stat="identity")
library(ggplot2)
library(gcookbook)
library(plyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,desc(Cultivar))) +
geom_bar(stat="identity")
library(ggplot2)
library(gcookbook)
library(plyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,desc(Cultivar))) +
geom_bar(stat="identity")
library(ggplot2)
library(gcookbook)
library(plyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar))) +
geom_bar(stat="identity")
library(ggplot2)
library(gcookbook)
library(plyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar))) +
geom_bar(stat="identity")
?desc
library(ggplot2)
library(gcookbook)
library(dplyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar))) +
geom_bar(stat="identity")
install.packages('dplyr')
install.packages("dplyr")
knitr::opts_chunk$set(prompt=TRUE,comment='',echo=TRUE,collapse=TRUE,message=FALSE,warning=FALSE)
library(ggplot2)
library(gcookbook)
library(dplyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar))) +
geom_bar(stat="identity")
library(ggplot2)
library(gcookbook)
library(dplyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,desc(Cultivar))) +
geom_bar(stat="identity")
library(ggplot2)
library(gcookbook)
library(dplyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar))) +
geom_bar(stat="identity")
library(ggplot2)
library(gcookbook)
library(plyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar))) +
geom_bar(stat="identity")
?rev(levels())
library(ggplot2)
library(gcookbook)
library(plyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,order=rev(Cultivar))) +
geom_bar(stat="identity")
library(ggplot2)
library(gcookbook)
library(plyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,order=rev(sort(Cultivar)))) +
geom_bar(stat="identity")
library(ggplot2)
library(gcookbook)
library(plyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,rev(sort(Cultivar)))) +
geom_bar(stat="identity")
library(ggplot2)
library(gcookbook)
library(plyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar))) +
geom_bar(stat="identity")
library(ggplot2)
library(gcookbook)
library(plyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=desc(Cultivar),order=desc(Cultivar))) +
geom_bar(stat="identity")
library(ggplot2)
library(gcookbook)
library(plyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar))) +
geom_bar(stat="identity")
library(gcookbook) # 为了使用数据
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity")
library(gcookbook) # 为了使用数据
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity")
library(gcookbook) # 为了使用数据
library(plyr)
ce <- arrange(cabbage_exp, Cultivar, Date)
# 以Date为切割变量()对每组数据进行transform()
ce <- ddply(cabbage_exp,"Date",transform,
percent_weight=Weight/sum(Weight)*100)
ggplot(ce,aes(x=Date,y=percent_weight,fill=Cultivar)) +
geom_bar(stat="identity")
library(gcookbook) # 为了使用数据
library(plyr)
ce <- arrange(cabbage_exp, Cultivar, Date)
# 以Date为切割变量()对每组数据进行transform()
ce <- ddply(cabbage_exp,"Date",transform,
percent_weight=Weight/sum(Weight)*100)
ggplot(ce,aes(x=Date,y=percent_weight,fill=Cultivar)) +
geom_bar(stat="identity")
library(gcookbook) # 为了使用数据
library(plyr)
# 以Date为切割变量()对每组数据进行transform()
ce <- ddply(cabbage_exp,"Date",transform,
percent_weight=Weight/sum(Weight)*100)
ggplot(ce,aes(x=Date,y=percent_weight,fill=Cultivar)) +
geom_bar(stat="identity")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=label_y),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
library(plyr)
# 根据日期和性别对数据进行排序
ce <- arrange(cabbage_exp,Date,Cultivar)
# 计算累积和
ce <- ddply(ce,"Date",transform,label_y=cumsum(Weight))
ce
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar,y=label_y)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar,label=label_y)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity",position = position_stack(reverse = TRUE)) +
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity"，position = position_stack(reverse = TRUE)) +
cabbage_exp
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity"，position = position_stack(reverse = TRUE)) +
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity",position = position_stack(reverse = TRUE)) +
guides(fill=guide_legend(reverse=TRUE))
library(ggplot2)
library(gcookbook)
library(plyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity",position = position_stack(reverse = TRUE))
library(ggplot2)
library(gcookbook)
library(plyr) # 为了使用desc()函数
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity",position = position_stack(reverse = TRUE))
library(ggplot2)
library(gcookbook)
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity",position = position_stack(reverse = TRUE))
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity",colour="black",position = position_stack(reverse = TRUE)) +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette="Pastel1")
ggplot(ce, aes(x=Date, y=percent_weight, fill=Cultivar)) +
geom_bar(stat='identity', colour='black',position = position_stack(reverse = TRUE)) +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette='Pastel1')
ce <- ddply(cabbage_exp,"Date",transform,
percent_weight=Weight/sum(Weight)*100)
ce
ggplot(ce, aes(x=Date, y=percent_weight, fill=Cultivar)) +
geom_bar(stat='identity', colour='black',position = position_stack(reverse = TRUE)) +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette='Pastel1')
ce <- arrange(cabbage_exp,Date,Cultivar)
# 计算y轴的位置，将数据标签置于条形中部
ce <- ddply(ce,"Date",transform,label_y=cumsum(Weight)-0.5*Weight)
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y,label=Weight),colour="White")
ce <- arrange(cabbage_exp,Date,Cultivar)
# 计算y轴的位置，将数据标签置于条形中部
ce <- ddply(ce,"Date",transform,label_y=cumsum(Weight)-0.5*Weight)
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity",position = position_stack(reverse = TRUE)) +
geom_text(aes(y=label_y,label=Weight),colour="White")
ce <- arrange(cabbage_exp,Date,Cultivar)
# 计算y轴的位置，将数据标签置于条形中部
ce <- ddply(ce,"Date",transform,label_y=cumsum(Weight)-0.5*Weight)
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity",position = position_stack(reverse = TRUE)) +
geom_text(aes(y=label_y,label=Weight),colour="White") +
guides(fill=guide_legend(reverse=TRUE))
ce <- arrange(cabbage_exp,Date,Cultivar)
# 计算y轴的位置，将数据标签置于条形中部
ce <- ddply(ce,"Date",transform,label_y=cumsum(Weight)-0.5*Weight)
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity",position = position_stack(reverse = TRUE)) +
geom_text(aes(y=label_y,label=Weight),colour="White")
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar)) +
geom_bar(stat="identity",colour="black",position = position_stack(reverse = TRUE)) +
geom_text(aes(y=label_y,label=paste(format(Weight,nsmall=2),"kg")),size=4) +
guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_brewer(palette="Pastel1")
library(gcookbook) #为了使用数摇
tophit <- tophitters2001[1:25,] #取出tophitters数据集中的前25个数据
ggplot(tophit,aes(x=avg,y=name)) + geom_point()
head(tophit)
tophit-6 <- tophit[,c("name","lg","avg")]
tophit6 <- tophit[,c("name","lg","avg")]
head(tophit6)
ggplot(tophit,aes(x=avg,y=reorder(name,avg))) +
geom_point(size=3) + #使用更大的点
theme_bw() +
theme(panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour="grey60",linetype="dashed"))
