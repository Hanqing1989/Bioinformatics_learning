dstats <- function(x)
sapply(x, mystats)
myvars <- c("mpg", "hp", "wt")
by(mtcars[myvars], mtcars$am, dstats)
dstats <- function(x)
myvars <- c("mpg", "hp", "wt")
by(mtcars[myvars], mtcars$am, dstats)
sapply(x, mystats)
dstats <- function(x)sapply(x, mystats)
myvars <- c("mpg", "hp", "wt")
by(mtcars[myvars], mtcars$am, dstats)
dstats <- function(x)
myvars <- c("mpg", "hp", "wt")
sapply(x, mystats)
mystats <- function(x)sapply(x, mystats)
myvars <- c("mpg", "hp", "wt")
by(mtcars[myvars], mtcars$am, mystats)
dstats <- function(x)sapply(x, dstats)
myvars <- c("mpg", "hp", "wt")
by(mtcars[myvars], mtcars$am, dstats)
dstats <- function(x)sapply(x, mystats)
myvars <- c("mpg", "hp", "wt")
by(mtcars[myvars], mtcars$am, dstats)
dstats <- function(x)sapply(x, mystats)
myvars <- c("mpg", "hp", "wt")
by(mtcars[myvars], mtcars$am, dstats)
dstats <- function(x)sapply(x, mystats)
myvars <- c("mpg", "hp", "wt")
by(mtcars[myvars], mtcars$am, dstats)
dstats <- function(x)sapply(x, mystats)
myvars <- c("mpg", "hp", "wt")
by(mtcars[myvars], mtcars$am, dstats)
ulimit -s 102400
knitr::opts_chunk$set(options(digits=2),prompt=TRUE,comment='',echo=TRUE,collapse=TRUE,message=FALSE,warning=FALSE)
dstats <- function(x)sapply(x, mystats)
myvars <- c("mpg", "hp", "wt")
by(mtcars[myvars], mtcars$am, dstats)
mystats <- function(x, na.omit=FALSE)
dstats <- function(x)sapply(x, mystats)
myvars <- c("mpg", "hp", "wt")
by(mtcars[myvars], mtcars$am, dstats)
mystats <- function(x)
dstats <- function(x)sapply(x, mystats)
myvars <- c("mpg", "hp", "wt")
by(mtcars[myvars], mtcars$am, dstats)
dstats <- function(x)sapply(x, mystats)
myvars <- c("mpg", "hp", "wt")
by(mtcars[myvars], mtcars$am, dstats)
dstats <- function(x)sapply(x, mystats)
myvars <- c("mpg", "hp", "wt")
by(mtcars[myvars], mtcars$am, dstats)
dstats <- function(x)sapply(x, mystats)
myvars <- c("mpg", "hp", "wt")
by(mtcars[myvars], mtcars$am, dstats)
dstats <- function(x)sapply(x, mystats)
myvars <- c("mpg", "hp", "wt")
by(mtcars[myvars], mtcars$am, dstats)
dstats <- function(x){
mean=sapply(x,mean)
sd=sapply(x,sd)
c(mean, sd)
}
myvars <- c("mpg", "hp", "wt")
by(mtcars[myvars], mtcars$am, dstats)
mystats <- function(x, na.omit=FALSE){
if (na.omit)
x <- x[!is.na(x)]
m <- mean(x)
n <- length(x)
s <- sd(x)
skew <- sum((x-m)^3/s^3)/n
kurt <- sum((x-m)^4/s^4)/n - 3
return(c(n=n, mean=m, stdev=s, skew=skew, kurtosis=kurt))
}
dstats <- function(x)sapply(x, mystats)
myvars <- c("mpg", "hp", "wt")
by(mtcars[myvars], mtcars$am, dstats)
install.packages('psych')
install.packages('doBy')
library(doBy)
summaryBy(mpg+hp+wt~am, data=mtcars, FUN=mystats)
library(psych)
myvars <- c("mpg", "hp", "wt")
describeBy(mtcars[myvars], list(am=mtcars$am))
install.packages('vcd')
install.packages('gmodels')
library(vcd)
head(Arthritis)
mytable <- with(Arthritis, table(Improved))
mytable
prop.table(mytable)
Improved
prop.table(mytable)
prop.table(mytable)*100
mytable <- xtabs(~ Treatment+Improved, data=Arthritis)
mytable
margin.table(mytable, 1)
prop.table(mytable, 1)
margin.table(mytable, 2)
prop.table(mytable, 2)
prop.table(mytable)
addmargins(mytable)
addmargins(mytable)
addmargins(prop.table(mytable))
addmargins(prop.table(mytable, 1), 2)
addmargins(prop.table(mytable, 2), 1)
library(gmodels)
CrossTable(Arthritis$Treatment, Arthritis$Improved)
mytable <- xtabs(~ Treatment+Sex+Improved, data=Arthritis)
mytable
mytable <- xtabs(~ Treatment+Sex+Improved, data=Arthritis)   # 各单元格的频数
mytable
ftable(mytable)
margin.table(mytable, 1) # 边际频数
margin.table(mytable, 1) # 边际频数
margin.table(mytable, 2)
margin.table(mytable, 3)
margin.table(mytable, c(1, 3)) # 治疗情况(Treatment)×改善情况(Improved)的边际频数
ftable(prop.table(mytable, c(1, 2)))   # 治疗情况(Treatment)×性别(Sex)的各类改善情况比例
ftable(addmargins(prop.table(mytable, c(1, 2)), 3))
ftable(addmargins(prop.table(mytable, c(1, 2)), 3)) * 100
library(vcd)
mytable <- xtabs(~Treatment+Improved, data=Arthritis)
chisq.test(mytable)
mytable <- xtabs(~Improved+Sex, data=Arthritis)
chisq.test(mytable)
mytable <- xtabs(~Treatment+Improved, data=Arthritis)
fisher.test(mytable)
mytable <- xtabs(~Treatment+Improved+Sex, data=Arthritis)
mantelhaen.test(mytable)
library(vcd)
mytable <- xtabs(~Treatment+Improved, data=Arthritis)
assocstats(mytable)
install.packages('ggm')
install.packages('psych')
install.packages("psych")
knitr::opts_chunk$set(options(digits=2),prompt=TRUE,comment='',echo=TRUE,collapse=TRUE,message=FALSE,warning=FALSE)
states<- state.x77[,1:6]
cov(states)
cor(states)
cor(states, method="spearman")
library(ggm)
colnames(states)
pcor(c(1,5,2,3,6), cov(states))
cor.test(states[,3], states[,5])
library(psych)
corr.test(states, use="complete")
install.packages('MASS')
library(MASS)
t.test(Prob ~ So, data=UScrime)
library(MASS)
sapply(UScrime[c("U1","U2")], function(x)(c(mean=mean(x),sd=sd(x))))
with(UScrime, t.test(U1, U2, paired=TRUE))
with(UScrime, by(Prob, So, median))
wilcox.test(Prob ~ So, data=UScrime)
sapply(UScrime[c("U1","U2")], median)
with(UScrime, wilcox.test(U1, U2, paired=TRUE))
states <- data.frame(state.region, state.x77)
kruskal.test(Illiteracy ~ state.region, data=states)
source("http://www.statmethods.net/RiA/wmc.txt")
source("/Users/liang.hanqing/Documents/Git-local/Github_Bioinformatics_Learning/R/Phase1_R_Basic_Learning/wmc.txt")
states <- data.frame(state.region, state.x77)
wmc(Illiteracy ~ state.region, data=states, method="holm")
install.packages(c("car", "scatterplot3d", "gclus", "hexbin", "IDPmisc", "Hmisc",     "corrgram", "vcd", "rld"))
knitr::opts_chunk$set(options(digits=2),prompt=TRUE,comment='',echo=TRUE,collapse=TRUE,message=FALSE,warning=FALSE)
par(ask=TRUE)
opar <- par(no.readonly=TRUE) # record current settings
View(opar)
par(ask=TRUE)
opar <- par(no.readonly=TRUE) # record current settings
# A scatter plot（散点图） with best fit lines
attach(mtcars)
plot(wt, mpg,
main="Basic Scatterplot of MPG vs. Weight",
xlab="Car Weight (lbs/1000)",
ylab="Miles Per Gallon ", pch=19)
abline(lm(mpg ~ wt), col="red", lwd=2, lty=1)
lines(lowess(wt, mpg), col="blue", lwd=2, lty=2)
detach(mtcars)
# Creating side by side scatter and line plots
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,2))
t1 <- subset(Orange, Tree==1)
plot(t1$age, t1$circumference,
xlab="Age (days)",
ylab="Circumference (mm)",
main="Orange Tree 1 Growth")
plot(t1$age, t1$circumference,
xlab="Age (days)",
ylab="Circumference (mm)",
main="Orange Tree 1 Growth",
type="b")
par(opar)
par(ask=TRUE)
opar <- par(no.readonly=TRUE) # record current settings
# A scatter plot（散点图） with best fit lines
attach(mtcars)
plot(wt, mpg,
main="Basic Scatterplot of MPG vs. Weight",
xlab="Car Weight (lbs/1000)",
ylab="Miles Per Gallon ", pch=19)
abline(lm(mpg ~ wt), col="red", lwd=2, lty=1)
lines(lowess(wt, mpg), col="blue", lwd=2, lty=2)
detach(mtcars)
par(ask=TRUE)
opar <- par(no.readonly=TRUE) # record current settings
# A scatter plot（散点图） with best fit lines
attach(mtcars)
plot(wt, mpg,
main="Basic Scatterplot of MPG vs. Weight",
xlab="Car Weight (lbs/1000)",
ylab="Miles Per Gallon ", pch=19)
abline(lm(mpg ~ wt), col="red", lwd=2, lty=1)
lines(lowess(wt, mpg), col="blue", lwd=2, lty=2)
detach(mtcars)
# Scatter plot with fit lines by group
library(car)
scatterplot(mpg ~ wt | cyl, data=mtcars, lwd=2,
main="Scatter Plot of MPG vs. Weight by # Cylinders",
xlab="Weight of Car (lbs/1000)",
ylab="Miles Per Gallon", id.method="identify",
legend.plot=TRUE, labels=row.names(mtcars),
boxplots="xy")
par(ask=TRUE)
opar <- par(no.readonly=TRUE) # record current settings
# Listing 11.1 - A scatter plot with best fit lines
attach(mtcars)
plot(wt, mpg,
main="Basic Scatterplot of MPG vs. Weight",
xlab="Car Weight (lbs/1000)",
ylab="Miles Per Gallon ", pch=19)
abline(lm(mpg ~ wt), col="red", lwd=2, lty=1)
lines(lowess(wt, mpg), col="blue", lwd=2, lty=2)
detach(mtcars)
# Scatter plot with fit lines by group
library(car)
scatterplot(mpg ~ wt | cyl, data=mtcars, lwd=2,
main="Scatter Plot of MPG vs. Weight by # Cylinders",
xlab="Weight of Car (lbs/1000)",
ylab="Miles Per Gallon", id.method="identify",
legend.plot=TRUE, labels=row.names(mtcars),
boxplots="xy")
par(ask=TRUE)
opar <- par(no.readonly=TRUE) # record current settings
# Listing 11.1 - A scatter plot with best fit lines
attach(mtcars)
plot(wt, mpg,
main="Basic Scatterplot of MPG vs. Weight",
xlab="Car Weight (lbs/1000)",
ylab="Miles Per Gallon ", pch=19)
abline(lm(mpg ~ wt), col="red", lwd=2, lty=1)
lines(lowess(wt, mpg), col="blue", lwd=2, lty=2)
detach(mtcars)
# Creating side by side scatter and line plots
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,2))
t1 <- subset(Orange, Tree==1)
plot(t1$age, t1$circumference,
xlab="Age (days)",
ylab="Circumference (mm)",
main="Orange Tree 1 Growth")
plot(t1$age, t1$circumference,
xlab="Age (days)",
ylab="Circumference (mm)",
main="Orange Tree 1 Growth",
type="b")
par(opar)
View(t1)
knitr::opts_chunk$set(options(digits=2),prompt=TRUE,comment='',echo=TRUE,collapse=TRUE,message=FALSE,warning=FALSE)
library(forestplot)
os_forest <- read.csv('os_forest.csv',header = FALSE)
# 读入数据的时候一定要把header设置成FALSE，保证第一行不被当作列名称。
tiff('Figure_os_forest.tiff',height = 800,width = 1200,res= 300)
forestplot(labeltext = as.matrix(os_forest[,1:3]),
#设置用于文本展示的列，此处用数据的前三列作为文本，在图中展示
mean = os_forest$V4, #设置均值
lower = os_forest$V5, #设置均值的上限
upper = os_forest$V6, #设置均值的下限
is.summary = c(T,T,T,F,F,T,F,F,T,F,F),
#该参数接受一个逻辑向量，用于定义数据中的每一行是否是汇总值，若是，则在对应位置设置为TRUE，若否，则设置为FALSE；设置为TRUE的行则以粗体出现
zero = 1, #设置参照值，此处我们展示的是HR值，故参照值是1，而不是0
boxsize = 0.4, #设置点估计的方形大小
lineheight = unit(10,'mm'),#设置图形中的行距
colgap = unit(3,'mm'),#设置图形中的列间距
lwd.zero = 2,#设置参考线的粗细
lwd.ci = 1.5,#设置区间估计线的粗细
col=fpColors(box='#458B00',  summary= "#8B008B",lines = 'black',zero = '#7AC5CD'),
#使用fpColors()函数定义图形元素的颜色，从左至右分别对应点估计方形，汇总值，区间估计线，参考线
xlab="The estimates",#设置x轴标签
graph.pos = 3)#设置森林图的位置，此处设置为3，则出现在第三列
library(forestplot)
os_forest <- read.csv('os_forest.csv',header = FALSE)
# 读入数据的时候一定要把header设置成FALSE，保证第一行不被当作列名称。
tiff('Figure_os_forest.tiff',height = 800,width = 1200,res= 150)
forestplot(labeltext = as.matrix(os_forest[,1:3]),
#设置用于文本展示的列，此处用数据的前三列作为文本，在图中展示
mean = os_forest$V4, #设置均值
lower = os_forest$V5, #设置均值的上限
upper = os_forest$V6, #设置均值的下限
is.summary = c(T,T,T,F,F,T,F,F,T,F,F),
#该参数接受一个逻辑向量，用于定义数据中的每一行是否是汇总值，若是，则在对应位置设置为TRUE，若否，则设置为FALSE；设置为TRUE的行则以粗体出现
zero = 1, #设置参照值，此处我们展示的是HR值，故参照值是1，而不是0
boxsize = 0.4, #设置点估计的方形大小
lineheight = unit(10,'mm'),#设置图形中的行距
colgap = unit(3,'mm'),#设置图形中的列间距
lwd.zero = 2,#设置参考线的粗细
lwd.ci = 1.5,#设置区间估计线的粗细
col=fpColors(box='#458B00',  summary= "#8B008B",lines = 'black',zero = '#7AC5CD'),
#使用fpColors()函数定义图形元素的颜色，从左至右分别对应点估计方形，汇总值，区间估计线，参考线
xlab="The estimates",#设置x轴标签
graph.pos = 3)#设置森林图的位置，此处设置为3，则出现在第三列
install.packages('ISwR')
??attach
knitr::opts_chunk$set(options(digits=2),prompt=TRUE,comment='',echo=TRUE,collapse=TRUE,message=FALSE,warning=FALSE)
library(ISwR) # 载入包
attach(juul) #载入数据集
mean(igf1,na.rm=TRUE) # 求均值，剔除缺失值
sum(!is.na(igf1))
summary(igf1)
summary(juul)
detach(juul)
??options
knitr::opts_chunk$set(options(digits=3),prompt=TRUE,comment='',echo=TRUE,collapse=TRUE,message=FALSE,warning=FALSE)
library(ISwR) # 载入包
attach(juul) #载入数据集
mean(igf1,na.rm=TRUE) # 求均值，剔除缺失值
sum(!is.na(igf1))
summary(igf1)
summary(juul)
detach(juul)
knitr::opts_chunk$set(prompt=TRUE,comment='',echo=TRUE,collapse=TRUE,message=FALSE,warning=FALSE)
library(ISwR) # 载入包
attach(juul) #载入数据集
mean(igf1,na.rm=TRUE) # 求均值，剔除缺失值
sum(!is.na(igf1))
summary(igf1)
summary(juul)
detach(juul)
library(ISwR) # 载入包
attach(juul) #载入数据集
mean(igf1,na.rm=TRUE) # 求均值，剔除缺失值
sum(!is.na(igf1))
summary(igf1)
summary(juul)
detach(juul)
??detach
knitr::opts_chunk$set(options(digits=2),prompt=TRUE,comment='',echo=TRUE,collapse=TRUE,message=FALSE,warning=FALSE)
# 因子化juul数据集
juul$sex <- factor(juul$sex,labels=c("M","F"))
juul$menarche <- factor(juul$menarche,labels=c("No","Yes"))
juul$tanner <- factor(juul$tanner,
labels=c("I","II","III","IV","V"))
attach(juul)
summary(juul)
detach(juul)
x <- rnorm(50)
hist(x)
mid.age <- c(2.5,7.5,13,16.5,17.5,19,22.5,44.5,70.5)
acc.count <- c(28,46,58,20,31,64,149,316,103)
age.acc <- rep(mid.age,acc.count)
brk <- c(0,5,10,16,17,18,20,25,60,80)
hist(age.acc,breaks=brk)
n <- length(x)
plot(sort(x),(1:n)/n,type="s",ylim=c(0,1))
qqnorm(x)
install.packages('IgM')
par(mfrow=c(1,2))
boxplot(IgM)
boxplot(log(IgM))
par(mfrow=c(1,1))
attach(red.cell.folate)
tapply(folate,ventilation,mean)
tapply(folate,ventilation,sd)
tapply(folate,ventilation,length)
xbar <- tapply(folate, ventilation, mean)
s <- tapply(folate, ventilation, sd)
n <- tapply(folate, ventilation, length)
cbind(mean=xbar, std.dev=s, n=n)
tapply(igf1, tanner, mean)
tapply(igf1, tanner, mean, na.rm=TRUE) # 去除缺失值后
juul <- transform(juul,
sex=factor(sex,labels=c("M","F")),
menarche=factor(menarche,labels=c("No","Yes")),
tanner=factor(tanner,labels=c("I","II","III","IV","V")))
attach(juul)
tapply(igf1, tanner, mean, na.rm=TRUE) # 去除缺失值后
juul <- transform(juul,
tanner=factor(tanner,labels=c("I","II","III","IV","V")))
attach(juul)
tapply(igf1, tanner, mean, na.rm=TRUE) # 去除缺失值后
juul <- transform(juul,tanner=factor(tanner,labels=c("I","II","III","IV","V")))
attach(juul)
tapply(igf1, tanner, mean, na.rm=TRUE) # 去除缺失值后
juul <- transform(juul,
sex=factor(sex,labels=c("M","F")),
menarche=factor(menarche,labels=c("No","Yes")),
tanner=factor(tanner,labels=c("I","II","III","IV","V")))
attach(juul)
tapply(igf1, tanner, mean, na.rm=TRUE) # 去除缺失值后
aggregate(juul[c("age","igf1")],
list(sex=juul$sex), mean, na.rm=T)
aggregate(juul[c("age","igf1")], juul["sex"], mean, na.rm=T)
by(juul, juul["sex"], summary)
# aggregate方法一
aggregate(juul[c("age","igf1")],
list(sex=juul$sex), mean, na.rm=T)
# aggregate方法二
aggregate(juul[c("age","igf1")], juul["sex"], mean, na.rm=T)
# by函数
by(juul, juul["sex"], summary)
attach(energy)
expend.lean <- expend[stature=="lean"]
expend.obese <- expend[stature=="obese"] # energy 数据集中expend变量被分割成两个向量
attach(energy)
expend.lean <- expend[stature=="lean"]
expend.obese <- expend[stature=="obese"] # energy 数据集中expend变量被分割成两个向量
par(mfrow=c(2,1))
hist(expend.lean,breaks=10,xlim=c(5,13),ylim=c(0,4),col="white")
hist(expend.obese,breaks=10,xlim=c(5,13),ylim=c(0,4),col="grey")
par(mfrow=c(1,1))
boxplot(expend ~ stature)
opar <- par(mfrow=c(2,2), mex=0.8, mar=c(3,3,2,1)+.1)
stripchart(expend ~ stature)
stripchart(expend ~ stature, method="stack")
stripchart(expend ~ stature, method="jitter")
stripchart(expend ~ stature, method="jitter", jitter=.03)
par(opar)
caff.marital <- matrix(c(652,1537,598,242,36,46,38,21,218
,327,106,67),
nrow=3,byrow=T)
caff.marital
colnames(caff.marital) <- c("0","1-150","151-300",">300")
rownames(caff.marital) <- c("Married","Prev.married","Single")
caff.marital
names(dimnames(caff.marital)) <- c("marital","consumption")
caff.marital
as.data.frame(as.table(caff.marital))
attach(juul)
table(sex) #juul dataset
table(sex,menarche)
table(menarche,tanner)
xtabs(~ tanner + sex, data=juul)
xtabs(~ dgn + diab + coma, data=stroke)
xtabs(~ tanner + sex, data=juul)
xtabs(~ dgn + diab + coma, data=stroke) # 用xtabs展示
ftable(coma + diab ~ dgn, data=stroke) # 用ftable展示
caff.marital
t(caff.marital) # t函数用来转置
attach(juul)
tanner.sex <- table(tanner,sex)
tanner.sex
margin.table(tanner.sex,1) #1代表行
margin.table(tanner.sex,2) #2代表列
prop.table(tanner.sex,1)
tanner.sex/sum(tanner.sex) #对上述结果计算百分比
total.caff <- margin.table(caff.marital,2)
total.caff
barplot(total.caff, col="white")
par(mfrow=c(2,2))
barplot(caff.marital, col="white")
barplot(t(caff.marital), col="white")
barplot(t(caff.marital), col="white", beside=T)
barplot(prop.table(t(caff.marital),2), col="white", beside=T)
par(mfrow=c(1,1))
barplot(prop.table(t(caff.marital),2),beside=T,
legend.text=colnames(caff.marital),
col=c("white","grey80","grey50","black"))
dotchart(t(caff.marital), lcolor="black")
opar <- par(mfrow=c(2,2),mex=0.8, mar=c(1,1,2,1))
slices <- c("white","grey80","grey50","black")
pie(caff.marital["Married",], main="Married", col=slices)
pie(caff.marital["Prev.married",],
main="Previously married", col=slices)
pie(caff.marital["Single",], main="Single", col=slices)
par(opar)
daily.intake <- c(5260,5470,5640,6180,6390,6515,
6805,7515,7515,8230,8770)
mean(daily.intake)
sd(daily.intake)
quantile(daily.intake)
t.test(daily.intake,mu=7725)
library(MASS)
var.test(Prob ~ So)
library(MASS)
var.test(Prob ~ So, data=UScrime)
t.test(Prob ~ So, data=UScrime,var.equal=TRUE)
library(ISwR)
attach(intake)
intake
post - pre
t.test(pre, post, paired=T)
wilcox.test(Prob, So, data=UScrime,paired=TRUE)
wilcox.test(U1, U2, data=UScrime,paired=TRUE)
wilcox.test(pre, post, paired=T)
library(ISwR)
attach(intake)
intake  # 查看数据集内容
post - pre # 绝经前后的差别
t.test(pre, post, paired=T) # t.test(pre, post) #WRONG!这是两个独立样本的t检验
wilcox.test(pre, post, paired=T) # 绝经前后的配对秩和检验
install.packages('car')
install.packages('gplots')
install.packages('HH')
install.packages('rrcov')
install.packages('multicomp')
install.packages('effects')
install.packages('MASS')
install.packages('mvoutlier')
??aov
??TukeyHSD
library(multcomp)
install.packages("multcomp")
