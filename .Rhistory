library(ggplot2)
qplot(carat, price, data = dsmall, geom = c("point", "smooth"))
qplot(carat, price, data = diamonds, geom = c("point", "smooth"))
qplot(carat, price, data = dsmall, geom = с("point", "smooth"), span = 0.2)
library(ggplot2)
qplot(carat, price, data = dsmall, geom = с("point", "smooth"), span = 0.2)
library(ggplot2)
qplot(carat, price, data = dsmall, geom = с("point", "smooth"), span = 0.2)
library(ggplot2)
qplot(carat, price, data = dsmall, geom = с("point", "smooth"), span = 0.2)
library(ggplot2)
qplot(carat, price, data = dsmall, geom = c("point", "smooth"))
qplot(carat, price, data = diamonds, geom = c("point", "smooth"))
library(ggplot2)
qplot(carat, price, data = dsmall, geom = c("point", "smooth"))
qplot(carat, price, data = diamonds, geom = c("point", "smooth"))
qplot(carat, price, data = dsmall, geom = с("point", "smooth"), span = 0.2)
library(ggplot2)
qplot(carat, price, data = dsmall, geom = c("point", "smooth"), span = 0.2)
qplot(carat, price, data = diamonds, geom = c("point", "smooth"))
qplot(carat, price, data = dsmall, geom = с("point", "smooth"), span = 0.2)
library(ggplot2)
qplot(carat, price, data = dsmall, geom = c("point", "smooth"), span = 0.2)
qplot(carat, price, data = dsmall, geom = c("point", "smooth"), span = 1)
library(mgcv)
qplot(carat, price, data = dsmall, geom = c("point", "smooth"), method = "gam", formula =y ~ s(x))
qplot(carat, price, data = dsmall, geom = c("point", "smooth"), method = "gam", formula =y ~ s(z, bs = "Cs"))
library(mgcv)
qplot(carat, price, data = dsmall, geom = c("point", "smooth"), method = "gam", formula =y ~ s(x))
qplot(carat, price, data = dsmall, geom = c("point", "smooth"), method = "gam", formula =y ~ s(x, bs = "cs"))
library(splines)
qplot(carat, price, data = dsmall, geom = с("point", "smooth"), method = "lm")
library(splines)
qplot(carat, price, data = dsmall, geom = с("point", "smooth"), method = "lm")
library(splines)
library(ggplot2)
qplot(carat, price, data = dsmall, geom = c("point", "smooth"))
qplot(carat, price, data = dsmall, geom = с("point", "smooth"), method = "lm")
library(splines)
library(ggplot2)
qplot(carat, price, data = dsmall, geom = c("point", "smooth"), method = "lm")
qplot(carat, price, data = dsmall, geom = с("point", "smooth"), method = "lm")
library(splines)
library(ggplot2)
qplot(carat, price, data = dsmall, geom = c("point", "smooth"), method = "lm")
qplot(carat, price, data = dsmall, geom = c("point", "smooth"), method = "lm", formula = y ~ ns(x, 5))
qplot(color, price / carat, data = diamonds,
geom = "jitter", alpha = I(1 / 5))
qplot(color, price / carat, data = diamonds,
geom = "jitter", alpha = I(1 / 5))
qplot(color, price / carat, data = diamonds,
geom = "boxplot", alpha = I(1 / 5))
qplot(color, price / carat, data = diamonds,
geom = "jitter")
qplot(color, price / carat, data = diamonds,
geom = "boxplot")
qplot(color, price / carat, data = diamonds,
geom = "jitter", alpha = I(1 / 5))
qplot(color, price / carat, data = diamonds,
geom = "jitter", alpha = I(1 / 50))
qplot(color, price / carat, data = diamonds,
geom = "jitter", alpha = I(1 / 200))
qplot(carat, data = diamonds, geom = "histogram")
qplot(carat, data = diamonds, geom = "density")
qplot(carat, data = diamonds, geom = "histogram", binwidth = 1, xlim = c(0,3))
qplot(carat, data = diamonds, geom = "histogram", binwidth = 0.1, xlim = c(0,3))
qplot(carat, data = diamonds, geom = "histogram", binvidth = 0.01, xlim = c(0,3))
qplot(carat, data = diamonds, geom = "density", colour = color)
qplot(carat, data = diamonds, geom = "histogram", fill = color)
qplot(color, data = diamonds, geom = "bar")
qplot(color, data = diamonds, geom = "bar", weight = carat) + scale_y_continuous("carat")
qplot(date, unemploy / pop, data = economics, geom = "line")
qplot(date, uempmed, data = economics, geom = "line")
year <- function(x) as.POSIXIt(x)$year + 1900
qplot(unemploy / pop, uempmed, data = economics, geom = с("point", "path"))
year <- function(x) as.POSIXIt(x)$year + 1900
qplot(unemploy / pop, uempmed, data = economics, geom = c("point", "path"))
qplot(unemploy / pop, uempmed, data = economics, geom = "path", colour = year(date))
year <- function(x) as.POSIXlt(x)$year + 1900
qplot(unemploy / pop, uempmed, data = economics, geom = c("point", "path"))
qplot(unemploy / pop, uempmed, data = economics, geom = "path", colour = year(date))
qplot(carat, data = diamonds, facets = color ~ .,geom = "histogram", binvidth = 0.1, xlim - c(0, 3))
qplot(carat, data = diamonds, facets = color ~ .,geom = "histogram", binvidth = 0.1, xlim = c(0, 3))
qplot(carat, ..density.., data = diamonds, facets = color ~ ., geom = "histogram", binwidth = 0.1, xlim = с(0, 3))
qplot(carat, data = diamonds, facets = color ~ .,geom = "histogram", binvidth = 0.1, xlim = c(0, 3))
qplot(carat, ..density.., data = diamonds, facets = color ~ ., geom = "histogram", binwidth = 0.1, xlim = c(0, 3))
qplot(carat, price, data = dsmall,
xlab = "Price ($)", ylab = "Weight (carats)", main = "Price-veight relationship")
qplot(carat, price/carat, data = dsmall,
ylab = expression(frac(price, carat)),
xlab = "Weight (carats)",
main = "Small diamonds",
xlim = c(.2, 1))
qplot(carat, price, data = dsmall, log = "xy")
knitr::opts_chunk$set(prompt=TRUE,comment='',echo=TRUE,collapse=TRUE,message=FALSE,warning=FALSE)
library(ggplot2)
head(mpg)
qplot(displ, hwy, data = mpg, colour = factor(cyl))
?qplot
qplot(displ, hwy, data = mpg, colour = factor(cyl), geom = "path")
qplot(displ, hwy, data = mpg, geom = "path")
qplot(displ, hwy, data = mpg, geom = "lines")
qplot(displ, hwy, data = mpg, geom = "line")
qplot(displ, hwy, data = mpg, geom = "line")
qplot(displ, hwy, data = mpg, geom = "bars")
qplot(displ, hwy, data = mpg, geom = "line")
qplot(displ, hwy, data = mpg, geom = "bar")
qplot(displ, hwy, data = mpg, geom = "line")
qplot(displ, hwy, data = mpg, geom = "bar")
?geom
??geom
qplot(displ, hwy, data = mpg, geom = "line")
qplot(displ, hwy, data = mpg, geom = "boxplot")
qplot(displ, hwy, data = mpg, geom = "line")
qplot(displ, hwy, data = mpg, geom = "bar")
qplot(displ, hwy, data = mpg, geom = "line")
qplot(displ, hwy, data = mpg, geom = "hist")
qplot(displ, hwy, data = mpg, geom = "line")
qplot(displ, hwy, data = mpg, geom = "bar")
qplot(displ, hwy, data = mpg, geom = "line")
qplot(displ, hwy, data = mpg, geom = "bars")
qplot(displ, hwy, data = mpg, geom = "line")
qplot(displ, hwy, data = mpg, geom = "bar")
qplot(displ, hwy, data = mpg, geom = "line")
qplot(displ, hwy, data = mpg, geom = "histogram")
qplot(displ, hwy, data = mpg, geom = "line")
qplot(displ, hwy, data = mpg, geom = "point")
qplot(displ, hwy, data = mpg, geom = "line")
qplot(displ, hwy, data = mpg, geom = "bar")
qplot(displ, hwy, data = mpg, geom = "line")
qplot(displ, hwy, data = mpg, geom = "bar", stat="identity")
qplot(displ, hwy, data = mpg, geom = "line")
ggplot(data=mpg, aes(x=displ, y=hwy)) +
geom_bar(stat="identity")
qplot(displ, hwy, data = mpg, geom = "line")
qplot(displ, hwy, data = mpg, geom = "bar", stat="identity")
qplot(displ, hwy, data = mpg, geom = "line")
qplot(displ, hwy, data = mpg, geom = "bar", stat_count("identity"))
qplot(displ, hwy, data = mpg, geom = "line")
?qplot
qplot(displ, hwy, data = mpg, geom = "line")
qplot(displ, hwy, data = mpg, geom = "histogram")
qplot(displ, hwy, data = mpg, geom = "line")
qplot(displ, data = mpg, geom = "histogram")
qplot(displ, hwy, data = mpg, geom = "line")
qplot(displ, data = mpg, geom = "bar")
qplot(displ, hwy, data = mpg, geom = "line")
qplot(displ, hwy, data = mpg, geom = "line")
qplot(displ, hwy, data = mpg, facets = .~year) + geom_smooth()
p <- qplot(displ, hwy, data = mpg, colour = factor(cyl))
summary(p)
# 保存图形对象
save(p, file = "plot.rdata")
# 读入图形对象
load("plot.rdata")
# 将图片保存成png格式
ggsave("plot.png", width = 5, height = 5)
knitr::opts_chunk$set(prompt=TRUE,comment='',echo=TRUE,collapse=TRUE,message=FALSE,warning=FALSE)
p <- ggplot(diamonds, aes(carat, price, colour = cut))
library(ggplot2)
p <- ggplot(diamonds, aes(carat, price, colour = cut))
p <- p+ layer(geom="point")
library(ggplot2)
p <- ggplot(diamonds, aes(carat, price, colour = cut))
p <- p + layer(geom = "point")
p <- p + layer(geom = "point")
p2 <- ggplot(diamonds, aes(x = carat))
p3 <- p2 + layer(geom = "bar",
geom_params = list(fill = "steelblue"),
stat = "bin",
stat_params =list(binwidth = 2))
p2 <- ggplot(diamonds, aes(x = carat))
p3 <- p2 + layer(geom = "bar",
geom_params = list(fill = "steelblue"),
stat = "bin",
stat_params =list(binwidth = 2)
)
p <- ggplot(diamonds, aes(x = carat))
p <- p + layer(geom = "bar",
geom_params = list(fill = "steelblue"),
stat = "bin",
stat_params =list(binwidth = 2)
)
p2 <- ggplot(diamonds, aes(x = carat))
p3 <- p2 + geom_histogram(binwidth = 2,fill = "steelblue")
p3
ggplot(msleep, aes(sleep_rem / sleep_total, awake)) + geom_point()
# 等价于
#qplot(sleep_rem / sleep_total, awake, data = msleep)
# 也可以给qplot添加图层
qplot(sleep_rem / sleep_total, awake, data = msleep) + geom_smooth()
# 等价于
#qplot(sleep_rem / sleep_total, awake, data = msleep, geom = с("point", "smooth"))
# 或
ggplot(msleep, aes(sleep_rem / sleep_total, awake)) + geom_point + geom_smooth()
ggplot(msleep, aes(sleep_rem / sleep_total, awake)) + geom_point()
# 等价于
#qplot(sleep_rem / sleep_total, awake, data = msleep)
# 也可以给qplot添加图层
qplot(sleep_rem / sleep_total, awake, data = msleep) + geom_smooth()
# 等价于
#qplot(sleep_rem / sleep_total, awake, data = msleep, geom = с("point", "smooth"))
# 或
ggplot(msleep, aes(sleep_rem / sleep_total, awake)) + geom_point() + geom_smooth()
ggplot(msleep, aes(sleep_rem / sleep_total, awake)) + geom_point()
# 等价于
#qplot(sleep_rem / sleep_total, awake, data = msleep)
# 也可以给qplot添加图层
qplot(sleep_rem / sleep_total, awake, data = msleep) + geom_smooth()
# 等价于
#qplot(sleep_rem / sleep_total, awake, data = msleep, geom = с("point", "smooth"))
# 或
#ggplot(msleep, aes(sleep_rem / sleep_total, awake)) + geom_point() + geom_smooth()
p4 <- ggplot(msleep, aes(sleep_rem / sleep_total, awake))
summary(p4)
p5 <- p4 + geom_point()
summary(p5)
library(scales)
bestfit <- geom_smooth(method = "lm", se = F,colour = alpha("steelblue", 0.5), size = 2)
qplot(sleep_rem, sleep_total, data = msleep) + bestfit
qplot(awake, brainwt, data = msleep, log = "у") + bestfit
qplot(bodywt, brainwt, data = msleep, log = "xу") + bestfit
p6 <- ggplot(mtcars, aes(mpg, wt, colour = cyl)) + geom_point()
p6
mtcars <- transform(mtcars, mpg = mpg ~ 2)
p6 <- ggplot(mtcars, aes(mpg, wt, colour = cyl)) + geom_point()
p6
mtcars <- transform(mtcars, mpg = mpg ^ 2)
p6 %+% mtcars
aes(x = weight, y = height, colour = age)
aes(weight, height, colour = sqrt(age))
p7 <- ggplot(mtcars)
summary(p7)
p8 <- p7 + aes(wt, hp)
summary(p8)
p9 <- ggplot(mtcars, aes(x = mpg,y = wt))
p9 + geom_point()
p9 + geom_point(aes(colour = factor(cyl)))
P9 + geom_point(aes(y = disp))
p9 + geom_point(aes(colour = factor(cyl)))
p9 + geom_point(aes(y = disp))
p9 + geom_point(colour = "darkblue")
p9 + geom_point(aes(colour ="darkblue"))
p10 <- ggplot(Oxboys,aes(age,height,group=Subject)) + geom_line()
p10 <- ggplot(Oxboys,aes(age,height,group=Subject)) + geom_line()
p10
p10 <- ggplot(Oxboys,aes(age,height,group=Subject)) + geom_line()
p10
p11 <- ggplot(Oxboys,aes(age,height)) + geom_line()
p11
p10 + geom_smooth(aes(group =Subject),method ="lm",se =F)
p10 + geom_smooth(aes(group =Subject),method ="lm",se =F)
p10 + geom_smooth(aes(group =1),method ="lm",size = 2, se =F)
boysbox <- ggplot(Oxboys,aes(Occasion,height)) + geom_boxplot()
boysbox + geom_line(aes(group=Subject),colour ="#3366FF")
boysbox <- ggplot(Oxboys,aes(Occasion,height)) + geom_boxplot()
boysbox
boysbox + geom_line(aes(group=Subject),colour ="#3366FF")
xgrid <- with(df,seq(min(x),max(x),length=50))
xgrid <- with(df,seq(min(x),max(x),length=50))
ggplot(diamonds,aes(carat)) + geom_histogram(aes(y =..density..),binwidth =0.1)
qplot(carat,..density..,data=diamonds,geom ="histogram", binwidth =0.1)
d <- ggplot(diamonds,aes(carat)) + xlim(0,3)
d + stat_bin(aes(ymax =..count..),binwidth =0.1,geom ="area")
d + stat_bin(aes(size =..density..),binwidth =0.1, geom="point",position="identity")
d + stat_bin(aes(y =1,fill =..count..),binwidth =0.1,geom="tile",position="identity")
d <- ggplot(diamonds,aes(carat)) + xlim(0,3)
d + stat_bin(aes(ymax =..count..),binwidth =0.1,geom ="area")
d + stat_bin(aes(size =..density..),binwidth =0.1, geom="point",position="identity")
d + stat_bin(aes(y = 1,fill =..count..),binwidth =0.1,geom="tile",position="identity")
d <- ggplot(diamonds,aes(carat)) + xlim(0,3)
d + stat_bin(aes(ymax =..count..),binwidth =0.1,geom ="area")
d + stat_bin(aes(size =..density..),binwidth =0.1, geom="point",position="identity")
d + stat_bin(aes(fill =..count..),binwidth =0.1,geom="tile",position="identity")
d <- ggplot(diamonds,aes(carat)) + xlim(0,3)
d + stat_bin(aes(ymax =..count..),binwidth =0.1,geom ="area")
d + stat_bin(aes(size =..density..),binwidth =0.1, geom="point",position="identity")
d + stat_bin(aes(y = 1, fill =..count..),binwidth =0.1,geom="tile",position="identity")
d <- ggplot(diamonds,aes(carat)) + xlim(0,3)
d + stat_bin(aes(ymax =..count..),binwidth =0.1,geom ="area")
d + stat_bin(aes(size =..density..),binwidth =0.1, geom="point",position="identity")
d + layer(stat = "bin",
geom = "tile",
stat_params = list(binwidth = 0.1),
mapping = aes(y = 1, fill = ..count..))
d <- ggplot(diamonds,aes(carat)) + xlim(0,3)
d + stat_bin(aes(ymax =..count..),binwidth =0.1,geom ="area")
d + stat_bin(aes(size =..density..),binwidth =0.1, geom="point",position="identity")
d + stat_bin2d(aes(y = 1, fill =..count..),binwidth =0.1,geom="tile",position="identity")
d <- ggplot(diamonds,aes(carat)) + xlim(0,3)
d + stat_bin(aes(ymax =..count..),binwidth =0.1,geom ="area")
d + stat_bin(aes(size =..density..),binwidth =0.1, geom="point",position="identity")
d + stat_bin2d(aes(y=1, fill=..count..), binwidth=0.1, geom="tile", position="identity")
d <- ggplot(diamonds,aes(carat)) + xlim(0,3)
d + stat_bin(aes(ymax =..count..),binwidth =0.1,geom ="area")
d + stat_bin(aes(size =..density..),binwidth =0.1, geom="point",position="identity")
d + stat_bin2d(aes(y = 1, fill=..count..), binwidth=0.1, geom="tile", position="identity")
d <- ggplot(diamonds,aes(carat)) + xlim(0,3)
d + stat_bin(aes(ymax =..count..),binwidth =0.1,geom ="area")
d + stat_bin(aes(size =..density..),binwidth =0.1, geom="point",position="identity")
require(nlme,quiet=TRUE,warn.conflicts=FALSE)
model <- lme(height~age,data=Oxboys, random =~1+age | Subject)
oplot <- ggplot(Oxboys,aes(age,height,group=Subject)) + geom_line()
age_grid <- seq(-1,1,length =10)
subjects <- unique(Oxboys$Subject)
preds <- expand.grid(ageage_grid,Subject=subjects)
age_grid <- seq(-1,1,length =10)
subjects <- unique(Oxboys$Subject)
preds <- expand.grid(age=age_grid,Subject=subjects)
preds$height <- predict(model,preds)
oplot + geom_line(data=preds,colour ="#3366FF",size=0.4)
Oxboys$fitted <- predict(model)
Oxboys$resid <- with(Oxboys,fitted-height)
oplot %+% Oxboys + aes(y=resid) + geom_smooth(aes(group=1))
model2 <- update(model,height~age + I(age^2))
Oxboys$fitted2 <- predict(model2)
Oxboys$resid2 <- with(Oxboys,fitted2 - height)
oplot %+% Oxboys + aes(y = resid2) + geom_smooth(aes(group=1))
knitr::opts_chunk$set(prompt=TRUE,comment='',echo=TRUE,collapse=TRUE,message=FALSE,warning=FALSE)
df <- data.frame(x=c(3,1,5),y=c(2,4,6),label =c("a","b","c"))
p1 <- ggplot(df,aes(x,y)) + xlab(NULL) + ylab(NULL)
p1 + geom_point() + labs(title = "geom_point")
p1 + geom_bar(stat="identity") + labs(title = "geom_bar(stat=\"identity\")")
p1 + geom_line() + labs(title = "geom_line")
p1 + geom_area() + labs(title = "geom_area")
p1 + geom_path() + labs(title = "geom_path")
p1 + geom_text(aes(labellabel)) + labs(title = "geom_text")
df <- data.frame(x=c(3,1,5),y=c(2,4,6),label =c("a","b","c"))
p1 <- ggplot(df,aes(x,y)) + xlab(NULL) + ylab(NULL)
p1 + geom_point() + labs(title = "geom_point")
p1 + geom_bar(stat="identity") + labs(title = "geom_bar(stat=\"identity\")")
p1 + geom_line() + labs(title = "geom_line")
p1 + geom_area() + labs(title = "geom_area")
p1 + geom_path() + labs(title = "geom_path")
p1 + geom_text(aes(label=label)) + labs(title = "geom_text")
p1 + geom_tile() + labs(title = "geom_tile")
p1 + geom_polygon() + labs(title = "geom_polygon")
depth_dist <- ggplot(diamonds,aes(depth)) + xlim(58,68)
depth_dist + geom_histogram(aes(y =..density..),binwidth =0.1) + facet_grid(cut ~.)
depth_dist + geom_histogram(aes(fill=cut),binwidth=0.1,position="fill")
depth_dist + geom_freqpoly(aes(y =..density..,colour=cut), binwidth=0.1)
qplot(depth, data = diamonds, geom = "histogram")
qplot(depth, data = diamonds, geom = "histogram")
qplot(depth, data = diamonds, geom = "histogram",
binwidth = 0.1, xlim = c(55,70))
library(plyr)
qplot(cut,depth,data = diamonds,geom = "boxplot")
qplot(carat,depth,data = diamonds,geom = "boxplot", group = round_any(carat,0.1,floor),xlim c(0,3))
library(plyr)
qplot(cut,depth,data = diamonds,geom = "boxplot")
qplot(carat,depth,data = diamonds,geom = "boxplot", group = round_any(carat,0.1,floor),xlim = c(0,3))
qplot(class,cty,data = mpg,geom = "jitter")
qplot(class,drv,data = mpg,geom = "jitter")
gplot(depth,data = diamonds,geom = "density",xlim =c(54,70))
qplot(depth,data = diamonds,geom = "density",xlim =c(54,70))
qplot(depth,data = diamonds,geom = "density",xlim =c(54,70), fill = cut,alpha = I(0.2))
df <- data.frame(x = rnorm(2000),y = rnorm(2000))
norm <- ggplot(df,aes(x,y))
norm + geom_point()
norm + geom_point(shape = 1)
norm + geom_point(shape =".") # 点的大小为像素级
norm + geom_point(colour = "black",alpha =1/3)
norm + geom_point(colour = "black",alpha =1/5)
norm + geom_point(colour = "black",alpha = 1/10)
td <- ggplot(diamonds,aes(table,depth)) +
xlim(50,70) + ylim(50,70)
td + geom_point()
td + geom_jitter()
jit <- position_jitter(width = 0.5)
td + geom_jitter(position = jit)
td + geom_jitter(position = jit,colour = "black",alpha = 1/10)
td + geom_jitter(position = jit,colour = "black",alpha = 1/50)
td + geom_jitter(position = jit,colour = "black",alpha = 1/200)
d <- ggplot(diamonds,aes(carat,price)) + xlim(1,3) + theme(legend.position = "none")
d + stat_bin2d()
d + stat_bin2d(bins = 10)
d + stat_bin2d(binwidth = c(0.02,200))
d + stat_binhex()
d + stat_binhex(bins = 10)
d + stat_binhex(binwidth = c(0.02,200))
d + geom_point() + geom_density2d()
d + stat_density2d(geom ="point",aes(size =..density..), contour = F) + scale_size_area()
d + stat_density2d(geom = "tile",aes(fill =..density..), contour = F)
last_plot() + scale_fill_gradient(limits = c(1e-5,8e-4))
library(maps)
data(us.cities)
big_cities <- subset(us.cities,pop > 500000)
qplot(long,lat,data = big_cities) + borders("state",size =0.5)
tx_cities <- subset(us.cities,country.etc =="TX")
ggplot(tx_cities,aes(long,lat)) + borders("county","texas",colour ="grey70") +
geom_point(colour ="black",alpha = 0.5)
library(maps)
states <- map_data("state")
arrests <- USArrests
names(arrests) <- tolower(names(arrests))
arrests$region <- tolower(rownames(USArrests))
choro <- merge(states,arrests,by = "region")
# 由于绘制多边形时涉及顺序问题
# 且merge破坏了原始排序故将行重新排序
choro <- choro[order(choro$order),]
qplot(long,lat,data = choro,group = group, fill = assault, geom = "polygon")
qplot(long,lat,data = choro,group = group, fill = assault / murder,geom = "polygon")
library(plyr) #ddply()在新版本中已被剥离并整合到plyr包中，这里先载入该包
ia <- map_data("county","iowa")
mid_range <- function(x) mean(range(x,na.rm = TRUE))
centres <- ddply(ia,.(subregion),colwise(mid_range,.(lat,long)))
ggplot(ia,aes(long,lat)) + geom_polygon(aes(group = group), fill = NA,colour = "grey60") +
geom_text(aes(label = subregion),data = centres, size = 2,angle = 45)
d1 <- subset(diamonds,carat < 2.5 & rbinom(nrow(diamonds),1,0.2)==1)
d1$lcarat <- log10(d1$carat)
d1$lprice <- log10(d1$price)
# 剔除整体的线性趋势
detrend <- lm(lprice ~ lcarat,data = d1)
d1$lprice2 <- resid(detrend)
mod <- lm(lprice2 ~ lcarat * color,data = d1)
library(effects)
effectdf <-function(...){
suppressWarnings(as.data.frame(effect(...)))}
color <- effectdf("color",mod)
both1 <- effectdf("lcarat:color",mod)
carat <- effectdf("lcarat",mod,default.levels = 50)
both2 <- effectdf("lcarat:color",mod,default.levels = 3)
# 图5.14
qplot(lcarat,lprice,data=d1,colour = color)
qplot(lcarat,lprice2,data=d1,colour = color)
# 图5.15
fplot <- ggplot(mapping = aes(y = fit,ymin = lower,ymax = upper)) +
ylim(range(both2$lower,both2$upper))
fplot %+% color + aes(x = color) + geom_point() + geom_errorbar()
fplot %+% both2 + aes(x = color,colour = lcarat,group = interaction(color,lcarat)) +
geom_errorbar() + geom_line(aes(group=lcarat)) +
scale_colour_gradient()
# 图5.16
fplot %+% carat + aes(x = lcarat) + geom_smooth(stat = "identity")
ends <- subset(both1,lcarat = max(lcarat))
fplot %+% both1 + aes(x = lcarat,colour = color) + geom_smooth(stat="identity") +
scale_colour_hue() + theme(legend.position = "none") +
geom_text(aes(label = color,x = lcarat + 0.02),ends)
d1 <- subset(diamonds,carat < 2.5 & rbinom(nrow(diamonds),1,0.2)==1)
d1$lcarat <- log10(d1$carat)
d1$lprice <- log10(d1$price)
# 剔除整体的线性趋势
detrend <- lm(lprice ~ lcarat,data = d1)
d1$lprice2 <- resid(detrend)
mod <- lm(lprice2 ~ lcarat * color,data = d1)
library(effects)
effectdf <-function(...){
suppressWarnings(as.data.frame(effect(...)))}
color <- effectdf("color",mod)
both1 <- effectdf("lcarat:color",mod)
carat <- effectdf("lcarat",mod,default.levels = 50)
both2 <- effectdf("lcarat:color",mod,default.levels = 3)
# 图5.14
qplot(lcarat,lprice,data=d1,colour = color)
qplot(lcarat,lprice2,data=d1,colour = color)
# 图5.15
fplot <- ggplot(mapping = aes(y = fit,ymin = lower,ymax = upper)) +
ylim(range(both2$lower,both2$upper))
fplot %+% color + aes(x = color) + geom_point() + geom_errorbar()
fplot %+% both2 + aes(x = color,colour = lcarat,group = interaction(color,lcarat)) +
geom_errorbar() + geom_line(aes(group=lcarat)) +
scale_colour_gradient()
# 图5.16
fplot %+% carat + aes(x = lcarat) + geom_smooth(stat = "identity")
ends <- subset(both1,lcarat = max(lcarat))
fplot %+% both1 + aes(x = lcarat,colour = color) + geom_smooth(stat="identity") +
scale_colour_hue() + theme(legend.position = "none") +
geom_text(aes(label = color,x = lcarat + 0.02),ends)
midm <- function(x)mean(x,trim =0.5)
m2 +
stat_summary(aes(colour = "trimmed"),fun.y =midm, geom ="point") +
stat_summary(aes(colour = "raw"),fun.y = mean, geom = "point") +
scale_colour_hue("Mean")
midm <- function(x)mean(x,trim =0.5)
midm +
stat_summary(aes(colour = "trimmed"),fun.y =midm, geom ="point") +
stat_summary(aes(colour = "raw"),fun.y = mean, geom = "point") +
scale_colour_hue("Mean")
igr <- function(x,...){
qs <- quantile(as.numeric(x),c(0.25,0.75),na.rm =T)
names(qs) <- c("ymin","ymax")
qs}
m + stat_summary(fun.data ="iqr",geom = "ribbon")
(unemp <- qplot(date,unemploy,data = economics,geom ="line", xlab ="",ylab="No.unemployed (1000s)"))
presidential <- presidential[-(1:3),]
yrng <- range(economics$unemploy)
xrng <- range(economics$date)
unemp + geom_vline(aes(xintercept = as.numeric(start)),data = presidential)
library(scales)
unemp + geom_rect(aes(NULL,NULL,xmin = start,xmax = end, fill = party),ymin = yrng[i],ymax = yrng[2],
data = presidential,alpha =0.2) +
scale_fill_manual(values =c("blue","red"))
library(scales)
unemp + geom_rect(aes(NULL,NULL,xmin = start,xmax = end, fill = party),ymin = yrng[1],ymax = yrng[2],
data = presidential,alpha =0.2) +
scale_fill_manual(values =c("blue","red"))
last_plot() + geom_text(aes(x = start,y = yrng[1],label = name), data = presidential,size = 3,
hjust = 0,vjust = 0)
caption <- paste(strwrap("Unemployment rates in the US have varied a lot over the years",40),collapse="\n")
unemp + geom_text(aes(x,y,label = caption),
data = data.frame(x = xrng[2],y = yrng[2]), hjust = 1,vjust = 1,size = 4)
highest <- subset(economics,unemploy == max(unemploy))
unemp + geom_point(data = highest, size = 3,colour = "red",alpha =0.5)
qplot(percwhite,percbelowpoverty,data = midwest)
qplot(percwhite,percbelowpoverty,data = midwest,
size = poptotal / 1e6) + scale_size_area("Population\n(millions)", breaks=c(0.5,1,2,4))
qplot(percwhite,percbelowpoverty,data=midwest,size = area) + scale_size_area()
lm_smooth <- geom_smooth(method = lm,size =1)
qplot(percwhite,percbelowpoverty,data = midwest) + lm_smooth
qplot(percwhite,percbelowpoverty,data = midwest, weight = popdensity,size = popdensity) + lm_smooth
qplot(percbelowpoverty,data = midwest,binwidth =1)
qplot(percbelowpoverty,data = midwest,weight = poptotal, binwidth =1) + ylab("population")
