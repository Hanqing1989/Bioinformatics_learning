library(gcookbook) # 为了使用数据集
# 基本图形
p2 <- ggplot(heightweight, aes(x=ageYear, y=heightIn, colour=sex)) + geom_point()
# 绘制区域的选项
p2 + theme(
panel.grid.major = element_line(colour="red"),
panel.grid.minor = element_line(colour="red", linetype="dashed", linewidth=0.2),
panel.background = element_rect(fill="lightblue"),
panel.border = element_rect(colour="blue", fill=NA, size=2))
# 文本项目的选项
p2 + ggtitle("Plot title here") +
theme(
axis.title.x = element_text(colour="red", size=14),
axis.text.x = element_text(colour="blue"),
axis.title.y = element_text(colour="red", size=14, angle = 90),
axis.text.y = element_text(colour="blue"),
plot.title = element_text(colour="red", size=20, face="bold"))
# 图例选项
p2 + theme(
legend.background = element_rect(fill="grey85", colour="red", size=1),
legend.title = element_text(colour="blue", face="bold", size=14),
legend.text = element_text(colour="red"),
legend.key = element_rect(colour="blue", size=0.25))
library(gcookbook) # 为了使用数据集
# 基本图形
p2 <- ggplot(heightweight, aes(x=ageYear, y=heightIn, colour=sex)) + geom_point()
# 绘制区域的选项
p2 + theme(
panel.grid.major = element_line(colour="red"),
panel.grid.minor = element_line(colour="red", linetype="dashed", linewidth=0.2),
panel.background = element_rect(fill="lightblue"),
panel.border = element_rect(colour="blue", fill=NA, size=2))
# 文本项目的选项
p2 + ggtitle("Plot title here") +
theme(
axis.title.x = element_text(colour="red", size=14),
axis.text.x = element_text(colour="blue"),
axis.title.y = element_text(colour="red", size=14, angle = 90),
axis.text.y = element_text(colour="blue"),
plot.title = element_text(colour="red", size=20, face="bold"))
# 图例选项
p2 + theme(
legend.background = element_rect(fill="grey85", colour="red", size=1),
legend.title = element_text(colour="blue", face="bold", size=14),
legend.text = element_text(colour="red"),
legend.key = element_rect(colour="blue", size=0.25))
# 分面选项
p2 + facet_grid(sex~.) + theme(
strip.background = element_rect(fill="pink"),
strip.text.y = element_text(size=14, angle=-90, face="bold"))
# strip.text.x 同理，只不过是针对横向分面
# 如果在添加一套完整的主题之前使用，theme()将没有效果
p2 + theme (axis.title.x = element_text(colour="red")) + theme_bw()
#在完整的主题后使用，theme()可以正常工作
p2 + theme_bw() + theme(axis.title.x = element_text(colour="red", size=12))
library(gcookbook) # 为了使用数据集
# 从theme_bw()入手，修改一些细节
mytheme <- theme_bw() +
theme(text= element_text(colour="red"),
axis.title = element_text(size = rel(1.25)))
# 基本图形
p1 <- ggplot(heightweight, aes(x=ageYear, y=heightIn)) + geom_point()
# 使用修改后的主题绘图
p1 + mytheme
library(gcookbook) # 为了使用数据集
p1 <- ggplot(heightweight, aes(x=ageYear, y=heightIn)) + geom_point()
p1 + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
# 隐藏纵向网格线(与x轴交汇的那些)
p1 + theme(panel.grid.major.x = element_blank(),
panel.grid.minor.X = element_blank())
# 隐藏纵向网格线(与x轴交汇的那些)
p1 + theme(panel.grid.major.x = element_blank(),
panel.grid.minor.X = element_blank())
# 隐藏纵向网格线(与x轴交汇的那些)
p1 + theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
# 隐藏横向网格线(与y轴交汇的那些)
p1 + theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
knitr::opts_chunk$set(prompt=TRUE,comment='',echo=TRUE,collapse=TRUE,message=FALSE,warning=FALSE)
# 基本图形(含图例)
p2 <- ggplot(PlantGrowth, aes(x_group, y=weight, fill=group)) + geom_boxplot()
p2
# 基本图形(含图例)
p2 <- ggplot(PlantGrowth, aes(x=group, y=weight, fill=group)) + geom_boxplot()
p2
# 移除标度fill的图例
p2 + guides(fill=FALSE)
# 移除标度fill的图例
p2 + scale_fill_discrete(guide=FALSE)
p2 + theme(legend.position="none")
library(ggplot2)
# 基本图形(含图例)
p2 <- ggplot(PlantGrowth, aes(x=group, y=weight, fill=group)) + geom_boxplot()
p2
# 移除标度fill的图例
p2 + guides(fill=FALSE)
p2 <- ggplot(PlantGrowth, aes(x=group, y=weight, fill=group)) +
geom_boxplot() +
scale_fill_brewer(palette="Pastel2")
p2 + theme(legend.position="top")
p2 + theme(legend.position=c(1,0))
p2 + theme(legend.position=c(1,1))
p2 + theme(legend.position=c(1.5,0))
p2 + theme(legend.position=c(0.5,0))
p2 + theme(legend.position=c(0.9,0))
p2 + theme(legend.position=c(0.95,0))
p2 + theme(legend.position=c(0.95,0.1))
p2 + theme(legend.position=c(0.95,0.2))
p2 + theme(legend.position=c(0.95,0.15))
p2 + theme(legend.position=c(1,0), legend.justification=c(1,0))
p2 + theme(legend.position=c(1,1), legend.justification=c(1,1))
p + theme(legend.position=c(.85,.2)) +
theme(legend.background=element_rect(fill = "white", colour="black"))
p2 + theme(legend.position=c(.85,.2)) +
theme(legend.background=element_rect(fill = "white", colour="black"))
p2 + theme(legend.position=c(.85,.2)) +
theme(legend.background=element_blank()) + # 移除整体的边框
theme(legend.key=element_blank()) # 移除每个图例项目周围的边框
# 基本图形
p1 <- ggplot(PlantGrowth, aes(x=group, y=weight, fill=group)) + geom_boxplot()
p1
# 修改项目顺序
p1 + scale_fill_discrete(limits=c("trt1", "trt2", "ctrl"))
p1 + scale_fill_grey(start=.5, end=1, limits=c("trt1","trt2","ctrl"))
p1 + scale_fill_brewer(palette="Pastel2", limits=c("trt1","trt2","ctrl"))
#基本图形
p1 <- ggplot(PlantGrowth, aes(x=group, y=weight, fill=group)) + geom_boxplot()
p1
# 反转图例顺序
p1 + guides(fill=guide_legend(reverse=TRUE))
p1 + scale_fill_hue(guide=guide_legend(reverse=TRUE))
p1 + guides(fill=guide_legend(reverse=TRUE)) +
scale_fill_hue(guide=guide_legend(reverse=TRUE))
p1 + scale_fill_hue(guide=guide_legend(reverse=TRUE))
# 基本图形
p1 <- ggplot(PlantGrowth, aes(x=group, y=weight, fill=group)) + geom_boxplot()
p1
# 设置图标题为"Condition"
p1 + labs(fill="Condition")
p1 + scale_fill_discrete(name="Condition")
library(gcookbook) # 为了使用数据集
# 绘制基本图形
hw1 <- ggplot(heightweight, aes(x=ageYear, y=heightIn, colour=sex)) +
geom_point(aes(size=weightLb)) +
scale_size_continuous(range=c(1,4))
hw1
# 使用新的图例标题
hw1 + labs(colour="Male/Female", size="Weight\n(pounds)")
hw2 <- ggplot(heightweight, aes(x=ageYear, y=heightIn, shape=sex, colour=sex)) +
geom_point()
hw2
# 仅修改shape的标题
hw2 + labs(shape="Male/Female")
# 同时修改shape和colour的标题
hw2 + labs(shape="Male/Female", colour="Male/Female")
p1 + guides(fill=guide_legend(title="Condition"))
p1 + guides(fill=guide_legend(title="Condition"))
p1 <- ggplot(PlantGrowth, aes(x=group, y=weight, fill=group)) + geom_boxplot()
p1 + theme(legend.title=element_text(face="italic", family="Times", colour="red",size=14))
p1 + guides(fill=guide_legend(title.theme=
element_text(face="italic", family="times", colour="red", size=14)))
p1 + guides(fill=guide_legend(title.theme=element_text(face="italic",
family="times", colour="red", size=14)))
p1 + guides(fill=guide_legend(title.theme=element_text(face="italic",
family="Times", colour="red", size=14)))
ggplot(PlantGrowth, aes(x=group, y=weight, fill=group)) +
geom_boxplot() +
guides(fill=guide_legend(title=NULL))
ggplot(PlantGrowth, aes(x=group, y=weight, fill=group)) +
geom_boxplot() +
scale_fill_hue(guide = guide_legend(title=NULL))
library(gcookbook) # 为了使用数据集
# 基本图形
p1 <- ggplot(PlantGrowth, aes(x=group, y=weight, fill=group)) + geom_boxplot()
# 修改图例标签
p1 + scale_fill_discrete(labels=c("Control","Treatment 1","Treatment 2"))
p1 + scale_fill_grey(start=.5, end=1,labels=c("Control","Treatment 1","Treatment 2"))
p1 + scale_fill_discrete(limits=c("trt1","trt2","ctrl"),
labels=c("Treatment 1", "Treatment 2","Control"))
# 基本图形
p3 <- ggplot(heightweight, aes(x=ageYear, y=heightIn, shape=sex, colour=sex)) + geom_point()
p3
# 修改一个标度中的标签
p3 + scale_shape_discrete(labels=c("Female", "Male"))
# 同时修改两个标度中的标签
p3 + scale_shape_discrete(labels=c("Female", "Male")) +
scale_colour_discrete(labels=c("Female", "Male"))
# 基本图形
p1 <- ggplot(PlantGrowth, aes(x=group, y=weight, fill=group)) + geom_boxplot()
# 修改图例标签的外观
p1 + theme(legend.text=element_text(face="italic", family="Times",
colour="red",size=14))
# 修改fill对应图例标签文本的外观
p1 + guides(fill=guide_legend(label.theme=element_text(face="italic",
family="Times", colour="red", size=14)))
# 基本图形
p1 <- ggplot(PlantGrowth, aes(x=group, y=weight, fill=group)) + geom_boxplot()
# 含有多于一行文本的标签
p1 + scale_fill_discrete(labels=c("Control","Type 1\ntreatment","Type 2\ntreatment"))
library(grid)
p1 + scale_fill_discrete(labels=c("Control", "Type 1\ntreatment","Type 2\ntreatment")) +
theme(legend.text=element_text(lineheight=.8),
legend.key.height=unit(1, "cm"))
knitr::opts_chunk$set(prompt=TRUE,comment='',echo=TRUE,collapse=TRUE,message=FALSE,warning=FALSE)
# 基本图形
p1 <- ggplot(mpg, aes(x=displ, y=hwy)) + geom_point()
# 纵向排列的子面板根据drv分面
p1 + facet_grid(drv ~.)
# 横向排列的子面板根据cyl分面
p1 + facet_grid(.~ cyl)
# 同时根据drv(纵向)和cyl(横向)分割
p1 + facet_grid(drv ~ cyl)
library(ggplot2)
# 基本图形
p1 <- ggplot(mpg, aes(x=displ, y=hwy)) + geom_point()
# 纵向排列的子面板根据drv分面
p1 + facet_grid(drv ~.)
# 横向排列的子面板根据cyl分面
p1 + facet_grid(.~ cyl)
# 同时根据drv(纵向)和cyl(横向)分割
p1 + facet_grid(drv ~ cyl)
# 依class分面
# 注意波浪线前没有任何字符
p1 + facet_wrap(~ class)
# 两种方式的结果是相同的：2行4列的分面
p1 + facet_wrap( ~ class, nrow=2)
#p1 + facet_wrap( ~ class, ncol=4)
p1 + facet_wrap( ~ class, ncol=4)
# 两种方式的结果是相同的：2行4列的分面
p1 + facet_wrap( ~ class, nrow=3)
#p1 + facet_wrap( ~ class, ncol=4)
# 基本图形
p1 <- ggplot(mpg, aes(x=displ, y=hwy)) + geom_point()
# 使用自由的y标度
p + facet_grid(drv ~ cyl, scales="free_y")
# 基本图形
p1 <- ggplot(mpg, aes(x=displ, y=hwy)) + geom_point()
# 使用自由的y标度
p1 + facet_grid(drv ~ cyl, scales="free_y")
# 使用自由的x标度和y标度
p1 + facet_grid(drv ~ cyl, scales="free")
mpg2 <- mpg  # 复制一份原始数据
# 重命名4为4wd、f为Front、r为Rear
levels(mpg2$drv)[levels(mpg2$drv)=="4"] <- "4wd"
levels(mpg2$drv)[levels(mpg2$drv)=="f"] <- "Front"
levels(mpg2$drv)[levels(mpg2$drv)=="r"] <- "Rear"
# 绘制新数据
ggplot(mpg2, aes(x=displ, y=hwy)) + geom_point() + facet_grid(drv ~.)
mpg2 <- mpg  # 复制一份原始数据
# 重命名4为4wd、f为Front、r为Rear
levels(mpg2$drv)[levels(mpg2$drv)=="4"] <- "4wd"
levels(mpg2$drv)[levels(mpg2$drv)=="f"] <- "Front"
levels(mpg2$drv)[levels(mpg2$drv)=="r"] <- "Rear"
# 绘制新数据
ggplot(mpg2, aes(x=displ, y=hwy)) + geom_point() + facet_grid(drv ~.)
mpg2 <- mpg  # 复制一份原始数据
# 重命名4为4wd、f为Front、r为Rear
levels(mpg2$drv)[levels(mpg2$drv)=="4"] <- "4wd"
levels(mpg2$drv)[levels(mpg2$drv)=="f"] <- "Front"
levels(mpg2$drv)[levels(mpg2$drv)=="r"] <- "Rear"
# 绘制新数据
ggplot(mpg2, aes(x=displ, y=hwy)) + geom_point() + facet_grid(drv ~.)
mpg2 <- mpg  # 复制一份原始数据
# 重命名4为4wd、f为Front、r为Rear
levels(mpg2$drv)[levels(mpg2$drv)=="4"] <- "4wd"
levels(mpg2$drv)[levels(mpg2$drv)=="f"] <- "Front"
levels(mpg2$drv)[levels(mpg2$drv)=="r"] <- "Rear"
# 绘制新数据
ggplot(mpg2, aes(x=displ, y=hwy)) + geom_point() + facet_grid(drv ~.)
?recode
library(ggplot2)
library(dplyr)
# 用dplyr包将原始数据内的分面变量drv的各个名称变量修改为目标要求，并存为新的数据用来做图
mpg2 <- mpg %>%
#将4修改为4wd、f为Front、r为Rear
mutate(drv = recode(drv, "4" = "4wd","f" = "Front","r" = "Rear"))
# 使用新数据做图，观察右侧部分标签内容
ggplot(mpg2, aes(x = displ, y = hwy)) + geom_point() + facet_grid(drv ~ .)
install.packages('dplyr')
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
knitr::opts_chunk$set(prompt=TRUE,comment='',echo=TRUE,collapse=TRUE,message=FALSE,warning=FALSE)
library(ggplot2)
library(dplyr)
# 用dplyr包将原始数据内的分面变量drv的各个名称变量修改为目标要求，并存为新的数据用来做图
mpg2 <- mpg %>%
#将4修改为4wd、f为Front、r为Rear
mutate(drv = recode(drv, "4" = "4wd","f" = "Front","r" = "Rear"))
# 使用新数据做图，观察右侧部分标签内容
ggplot(mpg2, aes(x = displ, y = hwy)) + geom_point() + facet_grid(drv ~ .)
ggplot(mpg2, aes(x=displ, y=hwy)) + geom_point () + facet_grid(drv ~ ., labeller = label_both)
library(dplyr)
# 用dplyr包将原始数据内的分面变量drv的各个名称变量修改为目标要求，并存为新的数据用来做图
mpg3 <- mpg %>%
# 将4修改为4^(wd)、f为- Front %.% e^(pi*i)、r为4^(wd) - Front
mutate(drv = recode(drv, "4" = "4^(wd)","f" = "- Front %.% e^(pi*i)","r" = "4^(wd) - Front"))
ggplot(mpg3, aes(x=displ, y=hwy)) + geom_point() +
facet_grid(drv ~ ., labeller = label_parsed)
library(gcookbook)  # 为了使用数据集
ggplot(cabbage_exp, aes(x=Cultivar, y=Weight)) + geom_bar(stat="identity") + facet_grid(. ~ Date) +
theme(strip.text = element_text(face="bold", size=rel(1.5)),
strip.background = element_rect(fill="lightblue", colour="black",size=1))
library(gcookbook)  # 为了使用数据集
ggplot(cabbage_exp, aes(x=Cultivar, y=Weight)) + geom_bar(stat="identity") + facet_grid(. ~ Date) +
theme(strip.text = element_text(face="bold", size=rel(1.5)),
strip.background = element_rect(fill="lightblue", colour="black",linewidth = 1))
knitr::opts_chunk$set(prompt=TRUE,comment='',echo=TRUE,collapse=TRUE,message=FALSE,warning=FALSE)
ggplot(mtcars, aes(x=wt, y=mpg)) + geom_point(colour="red")
library(MASS)  # 为了使用数据集
ggplot(birthwt, aes(x=bwt)) + geom_histogram(fill="red", colour="black")
library(gcookbook)  # 为了使用数据集
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(colour="black", position="dodge")
library(gcookbook)  # 为了使用数据集
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(colour="black", position="dodge")
library(gcookbook)  # 为了使用数据集
#ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(colour="black", position="dodge")
# 与上述方法效果相同
ggplot(cabbage_exp, aes(x=Date, y=Weight)) + geom_bar(aes(fill=Cultivar),colour="black",position="dodge")
library(gcookbook)  # 为了使用数据集
#ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(colour="black", position="dodge")
# 与上述方法效果相同
#ggplot(cabbage_exp, aes(x=Date, y=Weight)) + geom_bar(aes(fill=Cultivar),colour="black",position="dodge")
ggplot(mtcars, aes (x=wt, y=mpg, colour=cyl)) + geom_point()
# 与上述方法效果相同
#ggplot(mtcars, aes (x=wt, y=mpg)) + geom_point(aes(colour=cyl))
library(gcookbook)  # 为了使用数据集
#ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(colour="black", position="dodge")
# 与上述方法效果相同
#ggplot(cabbage_exp, aes(x=Date, y=Weight)) + geom_bar(aes(fill=Cultivar),colour="black",position="dodge")
#ggplot(mtcars, aes (x=wt, y=mpg, colour=cyl)) + geom_point()
# 与上述方法效果相同
ggplot(mtcars, aes (x=wt, y=mpg)) + geom_point(aes(colour=cyl))
?geom_bar
library(gcookbook)  # 为了使用数据集
#ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(colour="black", position="stack")
# 与上述方法效果相同
#ggplot(cabbage_exp, aes(x=Date, y=Weight)) + geom_bar(aes(fill=Cultivar),colour="black",position="dodge")
ggplot(mtcars, aes (x=wt, y=mpg, colour=cyl)) + geom_point()
# 与上述方法效果相同
# ggplot(mtcars, aes (x=wt, y=mpg)) + geom_point(aes(colour=cyl))
library(gcookbook)  # 为了使用数据集
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(colour="black", position="stack")
library(gcookbook)  # 为了使用数据集
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(colour="black", position="dodge")
library(gcookbook)  # 为了使用数据集
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(stat = "count",colour="black", position="dodge")
library(gcookbook)  # 为了使用数据集
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(aes(fill = drv),colour="black", position="dodge")
library(gcookbook)  # 为了使用数据集
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(colour="black", position="dodge")
library(gcookbook)  # 为了使用数据集
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(position="dodge", stat="identity", colour="black")
# 与上述方法效果相同
#ggplot(cabbage_exp, aes(x=Date, y=Weight)) + geom_bar(aes(fill=Cultivar),colour="black",position="dodge")
ggplot(mtcars, aes (x=wt, y=mpg, colour=cyl)) + geom_point()
# 与上述方法效果相同
# ggplot(mtcars, aes (x=wt, y=mpg)) + geom_point(aes(colour=cyl))
library(gcookbook)  # 为了使用数据集
#ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(position="dodge", stat="identity", colour="black")
# 与上述方法效果相同
ggplot(cabbage_exp, aes(x=Date, y=Weight)) + geom_bar(aes(fill=Cultivar), stat="identity",colour="black",position="dodge")
ggplot(mtcars, aes (x=wt, y=mpg, colour=cyl)) + geom_point()
# 与上述方法效果相同
# ggplot(mtcars, aes (x=wt, y=mpg)) + geom_point(aes(colour=cyl))
library(gcookbook)  # 为了使用数据集
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + geom_bar(position="dodge", stat="identity", colour="black")
# 与上述方法效果相同
#ggplot(cabbage_exp, aes(x=Date, y=Weight)) + geom_bar(aes(fill=Cultivar), stat="identity",colour="black",position="dodge")
ggplot(mtcars, aes (x=wt, y=mpg, colour=cyl)) + geom_point()
# 与上述方法效果相同
# ggplot(mtcars, aes (x=wt, y=mpg)) + geom_point(aes(colour=cyl))
str(cabbage_exp)
# 在ggplot()中因子化
ggplot(mtcars, aes(x=wt, y=mpg, colour=factor(cyl))) + geom_point()
# 另一个方法：在原数据中因子化
#m <- mtcars  # 复制mtcars
#m$cyl <- factor(m$cyl) # 将cyl转化为因子
#ggplot(m, aes (x=wt, y=mpg, colour=cyl)) + geom_point()
library(gcookbook) # 为了使用数据集
# 基础图形
p1 <- ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup)) + geom_area()
# 这三种方法效果相同
p1
#p1 + scale_fill_discrete()
#p1 + scale_fill_hue()
# ColorBrewer调色板
p1 + scale_fill_brewer()
library(gcookbook) # 为了使用数据集
# 基础图形
p1 <- ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup)) + geom_area()
# 这三种方法效果相同
#p1
p1 + scale_fill_discrete()
#p1 + scale_fill_hue()
# ColorBrewer调色板
p1 + scale_fill_brewer()
library(gcookbook) # 为了使用数据集
# 基础图形
p1 <- ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup)) + geom_area()
# 这三种方法效果相同
p1
#p1 + scale_fill_discrete()
#p1 + scale_fill_hue()
# ColorBrewer调色板
p1 + scale_fill_brewer()
# 基本的散点图
h <- ggplot(heightweight, aes(x=ageYear, y=heightIn, colour=sex)) + geom_point()
# 默认亮度lightness = 65
h
# 略微加深
h + scale_colour_hue(l=45)
library(RColorBrewer)
display.brewer.all()
library(RColorBrewer)
display.brewer.all()
p1 + scale_fill_brewer(palette="Oranges")
p1 + scale_fill_grey()
# 倒转方向并且更改灰度范围
p1 + scale_fill_grey(start=0.7, end=0)
library(gcookbook) # 为了使用数据集
# 基础图形
h <- ggplot(heightweight, aes(x=ageYear, y=heightIn, colour=sex)) + geom_point()
#使用颜色名
h + scale_colour_manual(values=c("red", "blue"))
#使用RGB值
h + scale_colour_manual(values=c("#CC6666","#7777DD"))
levels(heightweight$sex)
h + scale_colour_manual(values=c(m="blue", f="red"))
library(gcookbook) # 为了使用数据集
# 基础图形
p1 <- ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup)) + geom_area()
# 加入灰色到调色板
cb_palette <- c("#999999", "#E69F00", "#56B4Е9", "#009E73", "#FOE442",
"#0072B2", "#D55E00", "#CC79A7")
# 将其使用到图形中
p1 + scale_fill_manual(values=cb_palette)
library(gcookbook) # 为了使用数据集
# 基础图形
p1 <- ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup)) + geom_area()
# 加入灰色到调色板
cb_palette <- c("#999999", "#E69F00", "#5bf978", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7")
# 将其使用到图形中
p1 + scale_fill_manual(values=cb_palette)
# 加入颜色到调色板
cb_palette <- c("#000000","#E69F00","#56B4E9","#009E73","#F0E442","#0072B2","#D55E00","#CC79A7")
# 将其使用到图形中
p1 + scale_fill_manual(values=cb_palette)
library(gcookbook) # 为了使用数据集
# 基础图形
p1 <- ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup)) + geom_area()
# 加入灰色到调色板
cb_palette <- c("#000000","#E69F00","#56B4E9","#009E73","#F0E442","#0072B2","#D55E00","#CC79A7")
# 将其使用到图形中
p1 + scale_fill_manual(values=cb_palette)
library(gcookbook) # 为了使用数据集
# 基础图形
p1 <- ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup)) + geom_area()
# 加入灰色到调色板
cb_palette <- c("#999999","#E69F00","#56B4E9","#009E73","#F0E442","#0072B2","#D55E00","#CC79A7")
# 将其使用到图形中
p1 + scale_fill_manual(values=cb_palette)
library (gcookbook) # 为了使用数据集
# 基础图形
p2 <- ggplot(heightweight, aes(x=ageYear, y=heightIn, colour=weightLb)) + geom_point(size=3)
p2
# 使用两种颜色的渐变色
p2 + scale_colour_gradient(low="black", high="white")
# 渐变色中间用白色划分
library(scales)
p2 + scale_colour_gradient2(low=muted("red"), mid="white", high=muted("blue"), midpoint=110)
# n个颜色的渐变色
p2 + scale_colour_gradientn(colours = c("darkred", "orange", "yellow", "white"))
library(gcookbook) # 为了使用数据集
cb <- subset(climate, Source=="Berkeley")
cb$valence[cb$Anomaly10y >= 0] <- "pos"
cb$valence[cb$Anomaly10y <0] <- "neg"
cb
library(gcookbook) # 为了使用数据集
cb <- subset(climate, Source=="Berkeley")
cb$valence[cb$Anomaly10y >= 0] <- "pos"
cb$valence[cb$Anomaly10y <0] <- "neg"
head(cb)
ggplot(cb, aes(x=Year, y=Anomaly10y)) +
geom_area(aes(fill=valence)) +
geom_line() +
geom_hline(yintercept=0)
# approx()返回一个列表，包含x和y向量
interp <- approx(cb$Year, cb$Anomaly10y, n=1000)
# 放在一个数据框中并重新计算valence
cbi <- data.frame(Year=interp$x, Anomaly10y=interpsy)
# approx()返回一个列表，包含x和y向量
interp <- approx(cb$Year, cb$Anomaly10y, n=1000)
# 放在一个数据框中并重新计算valence
cbi <- data.frame(Year=interp$x, Anomaly10y=interp$y)
cbi$valence[cbi$Anomaly10y >= 0] <- "pos"
cbi$valence[cbi$Anomaly10y <0] <- "neg"
# approx()返回一个列表，包含x和y向量
interp <- approx(cb$Year, cb$Anomaly10y, n=1000)
# 放在一个数据框中并重新计算valence
cbi <- data.frame(Year=interp$x, Anomaly10y=interp$y)
cbi$valence[cbi$Anomaly10y >= 0] <- "pos"
cbi$valence[cbi$Anomaly10y <0] <- "neg"
ggplot(cbi, aes(x=Year, y=Anomaly10y)) +
geom_area(aes(fill=valence), alpha=.4) +
geom_line() +
geom_hline(yintercept=0) +
scale_fill_manual(values=c("#CCEEFF", "#FFDDDD"), guide='none') +
scale_x_continuous(expand=c(0, 0))
